{"ast":null,"code":"var _jsxFileName = \"/Users/akankshadhoka/Desktop/github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types.js';\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); //Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/akankshadhoka/Desktop/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types.js';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif(process.env.NODE_ENV !== 'production'){\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET\n}\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading : false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // Search Users\n    const searchUsers = async (text) => {\n        setLoading();\n        const res = await axios.get(\n          `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n        );\n     dispatch ({\n         type: SEARCH_USERS,\n         payload: res.data.items\n     })\n      };\n\n    // Get User\n  const getUser = async (username) => {\n    setLoading()\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n        dispatch({\n            type: GET_USER,\n            payload: res.data\n        })\n  };\n  // Get users repos\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    dispatch({\n        type: GET_REPOS,\n        payload: res.data\n    })\n   };\n\n    // Clear Users\n  const clearUsers = () => dispatch({type: CLEAR_USERS});\n\n    //Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    return <GithubContext.Provider\n        value = {{\n            users: state.users,\n            user: state.user,\n            repos: state.repos,\n            loading: state.loading,\n            searchUsers,\n            clearUsers,\n            getUser,\n            getUserRepos\n        }}\n        >\n    {props.children}\n    </GithubContext.Provider>\n}\n\nexport default GithubState"]},"metadata":{},"sourceType":"module"}