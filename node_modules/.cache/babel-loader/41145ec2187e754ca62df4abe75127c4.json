{"ast":null,"code":"var _jsxFileName = \"/Users/akankshadhoka/Desktop/github-finder/src/components/users/Users.js\";\nimport React, { useContext } from \"react\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n  const {\n    loading,\n    users\n  } = githubContext;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: userStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, users.map(user => /*#__PURE__*/React.createElement(UserItem, {\n      key: user.id,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nconst userStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridGap: \"1rem\"\n};\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nexport default Users;","map":{"version":3,"sources":["/Users/akankshadhoka/Desktop/github-finder/src/components/users/Users.js"],"names":["React","useContext","UserItem","Spinner","PropTypes","GithubContext","Users","githubContext","loading","users","userStyle","map","user","id","display","gridTemplateColumns","gridGap","propTypes","array","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,aAAa,GAAGN,UAAU,CAACI,aAAD,CAAhC;AACA,QAAM;AAACG,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAmBF,aAAzB;;AACA,MAAIC,OAAJ,EAAa;AACX,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAK,MAAA,KAAK,EAAEE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOD;AACF,CAdD;;AAgBA,MAAMF,SAAS,GAAG;AAChBI,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,mBAAmB,EAAE,gBAFL;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAlB;AAMAV,KAAK,CAACW,SAAN,GAAkB;AAChBR,EAAAA,KAAK,EAAEL,SAAS,CAACc,KAAV,CAAgBC,UADP;AAEhBX,EAAAA,OAAO,EAAEJ,SAAS,CAACgB,IAAV,CAAeD;AAFR,CAAlB;AAIA,eAAeb,KAAf","sourcesContent":["import React, {useContext} from \"react\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n  const {loading, users} = githubContext;\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={userStyle}>\n        {users.map((user) => (\n          <UserItem key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst userStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridGap: \"1rem\",\n};\n\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}