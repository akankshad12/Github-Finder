{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akankshadhoka/Desktop/github-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/akankshadhoka/Desktop/github-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/akankshadhoka/Desktop/github-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import GithubContext from'./githubContext';import GithubReducer from'./githubReducer';import{SEARCH_USERS,SET_LOADING,CLEAR_USERS,GET_USER,GET_REPOS}from'../types.js';var githubClientId;var githubClientSecret;if(process.env.NODE_ENV!=='production'){githubClientId=process.env.REACT_APP_GITHUB_CLIENT_ID;githubClientSecret=process.env.REACT_APP_GITHUB_CLIENT_SECRET;}else{githubClientId=process.env.GITHUB_CLIENT_ID;githubClientSecret=process.env.GITHUB_CLIENT_SECRET;}var GithubState=function GithubState(props){var initialState={users:[],user:{},repos:[],loading:false};var _useReducer=useReducer(GithubReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Search Users\nvar searchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading();_context.next=3;return axios.get(\"https://api.github.com/search/users?q=\".concat(text,\"&client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context.sent;dispatch({type:SEARCH_USERS,payload:res.data.items});case 5:case\"end\":return _context.stop();}}},_callee);}));return function searchUsers(_x){return _ref.apply(this,arguments);};}();// Get User\nvar getUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading();_context2.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"?client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context2.sent;dispatch({type:GET_USER,payload:res.data});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getUser(_x2){return _ref2.apply(this,arguments);};}();// Get users repos\nvar getUserRepos=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(username){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoading();_context3.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"/repos?per_page=5&sort=created:asc&client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context3.sent;dispatch({type:GET_REPOS,payload:res.data});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function getUserRepos(_x3){return _ref3.apply(this,arguments);};}();// Clear Users\nvar clearUsers=function clearUsers(){return dispatch({type:CLEAR_USERS});};//Set Loading\nvar setLoading=function setLoading(){return dispatch({type:SET_LOADING});};return/*#__PURE__*/React.createElement(GithubContext.Provider,{value:{users:state.users,user:state.user,repos:state.repos,loading:state.loading,searchUsers:searchUsers,clearUsers:clearUsers,getUser:getUser,getUserRepos:getUserRepos}},props.children);};export default GithubState;","map":{"version":3,"sources":["/Users/akankshadhoka/Desktop/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","get","res","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types.js';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif(process.env.NODE_ENV !== 'production'){\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET\n}else{\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET\n}\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading : false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // Search Users\n    const searchUsers = async (text) => {\n        setLoading();\n        const res = await axios.get(\n          `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n        );\n     dispatch ({\n         type: SEARCH_USERS,\n         payload: res.data.items\n     })\n      };\n\n    // Get User\n  const getUser = async (username) => {\n    setLoading()\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n        dispatch({\n            type: GET_USER,\n            payload: res.data\n        })\n  };\n  // Get users repos\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n    dispatch({\n        type: GET_REPOS,\n        payload: res.data\n    })\n   };\n\n    // Clear Users\n  const clearUsers = () => dispatch({type: CLEAR_USERS});\n\n    //Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    return <GithubContext.Provider\n        value = {{\n            users: state.users,\n            user: state.user,\n            repos: state.repos,\n            loading: state.loading,\n            searchUsers,\n            clearUsers,\n            getUser,\n            getUserRepos\n        }}\n        >\n    {props.children}\n    </GithubContext.Provider>\n}\n\nexport default GithubState"]},"metadata":{},"sourceType":"module"}