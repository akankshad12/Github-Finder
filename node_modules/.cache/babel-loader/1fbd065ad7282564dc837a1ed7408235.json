{"ast":null,"code":"var _jsxFileName = \"/Users/akankshadhoka/Desktop/github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING } from '/context/types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n  // Get repos\n  // Clear Users\n  //Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/akankshadhoka/Desktop/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACIC,YADJ,EAEIC,WAFJ,QAGO,gBAHP;;AAIA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAG;AAJO,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACG,aAAD,EAAgBK,YAAhB,CAApC,CARyB,CAUzB;;AACA,QAAMO,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAChCC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACf,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAD9I,CAAlB;AAGHT,IAAAA,QAAQ,CAAE;AACNU,MAAAA,IAAI,EAAEpB,YADA;AAENqB,MAAAA,OAAO,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAFZ,KAAF,CAAR;AAIE,GATH,CAXyB,CAuBzB;AAEA;AAEA;AAEA;;;AACA,QAAMV,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEnB;AAAR,GAAD,CAAjC;;AAEA,sBAAO,oBAAC,aAAD,CAAe,QAAf;AACH,IAAA,KAAK,EAAI;AACLI,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLG,MAAAA;AALK,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASNR,KAAK,CAACqB,QATA,CAAP;AAWH,CA3CD;;AA6CA,eAAetB,WAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING\n} from '/context/types';\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading : false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // Search Users\n    const searchUsers = async (text) => {\n        setLoading();\n        const res = await axios.get(\n          `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n        );\n     dispatch ({\n         type: SEARCH_USERS,\n         payload: res.data.items\n     })\n      };\n\n\n    // Get User\n\n    // Get repos\n\n    // Clear Users\n\n    //Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    return <GithubContext.Provider\n        value = {{\n            users: state.users,\n            user: state.user,\n            repos: state.repos,\n            loading: state.loading,\n            searchUsers\n        }}\n        >\n    {props.children}\n    </GithubContext.Provider>\n}\n\nexport default GithubState"]},"metadata":{},"sourceType":"module"}